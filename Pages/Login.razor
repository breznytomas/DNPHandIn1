
@page "/login"

@using LoginExample.Authentication
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<AuthorizeView>
    <NotAuthorized>
       
        <div class="form-group">
            <label>User name:</label>
            <input type="text" placeholder="user name" @bind-value="username"/>
        </div>
        <div class="form-group">
            <label>Password</label>
            <input type="password" placeholder="password" @bind-value="password"/>
        </div>
        <div style="color:red">@errorMessage</div>

        <Button @onclick="PerformLogin">Login</Button>
    </NotAuthorized>
    <Authorized>
         <h3>Loged in as @context.User.Identity?.Name</h3>
        <p>Hello @context.User.Identity?.Name your System access level is @context.User.FindFirst(claim => claim.Type.Equals("Level"))?.Value</p>

        <Button @onclick="PerformLogout">Logout</Button>
    </Authorized>
</AuthorizeView>

@code {
    private string username;
    private string password;
    private string errorMessage;
    
    

    public async Task PerformLogin() {
        errorMessage = "";
        try {
            ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ValidateLogin(username, password);
            username = "";
            password = "";
           
        } catch (Exception e) {
            errorMessage = e.Message;
        }
    }

  

    public async Task PerformLogout() {
        errorMessage = "";
        username = "";
        password = "";
        
        try {
            ((CustomAuthenticationStateProvider) AuthenticationStateProvider).Logout();
        } catch (Exception e) { }
    }

}
